{"version":3,"sources":["../src/metrics.js"],"names":["Version","ver","version","TypeByKeys","keys","indexOf","_","moment","SemverCmp","Metrics","metricFnc","res","field1","field2","points","div","forEach","entries","entry","value1","value2","start","Start","last","Last","value","push","valueOf","rttFnc","field","sortBy","v","Name","Suffix","PointsFnc"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nimport { SemverCmp } from \"./semver\";\n\nexport var Metrics = {};\nexport var version = \"\";\n\nexport function Version(ver) { version = ver };\n\nvar metricFnc = (res, field1, field2) => {\n  var points = [];\n\n  var div = 1;\n  if (SemverCmp(version, \"0.9\") > 0) {\n    div = 1000;\n  }\n\n  _.forEach(res[0], (entries) => {\n    _.forEach(entries, (entry) => {\n      var value1 = 0, value2 = 0;\n      if (field1 in entry) {\n        value1 = entry[field1];\n      }\n      if (field2 in entry) {\n        value2 = entry[field2];\n      }\n\n      var start = entry.Start;\n      var last = entry.Last;\n\n      if (div > 1) {\n        start /= div;\n        last /= div;\n      }\n\n      var value = (value1 + value2) / (last - start);\n\n      points.push([value, moment(last, 'X').valueOf()]);\n    });\n  });\n\n  return points;\n}\n\nvar rttFnc = (res, field) => {\n  var points = [];\n\n  _.forEach(res[0], (entries) => {\n    _.forEach(entries, (entry) => {\n      var value = 0;\n      if (field in entry) {\n        value = entry[field];\n      }\n\n      var start = entry.Start / 1000;\n\n      points.push([value, moment(start, 'X').valueOf()]);\n    });\n  });\n\n  return _.sortBy(points, [function (v) { return v[1]; }]);\n}\n\nMetrics[\"Flow\"] = {\n  \"Default\": {\n    \"Name\": \"Flow\",\n    \"Default\": \"Bytes\",\n    \"MinVer\": \"0.1\",\n    \"Fields\": {\n      \"Packets\": { Name: \"Packets\", Suffix: \"Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"ABPackets\", \"BAPackets\") } },\n      \"Bytes\": { Name: \"Bytes\", Suffix: \"Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"ABBytes\", \"BABytes\") } },\n      \"ABPackets\": { Name: \"ABPackets\", Suffix: \"Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"ABPackets\") } },\n      \"ABBytes\": { Name: \"ABBytes\", Suffix: \"Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"ABBytes\") } },\n      \"BAPackets\": { Name: \"BAPackets\", Suffix: \"Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"ABBytes\") } },\n      \"BABytes\": { Name: \"BABytes\", Suffix: \"Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"ABBytes\") } },\n      \"RTT\": { Name: \"RTT\", Suffix: \"Metrics()\", PointsFnc: (res) => { return rttFnc(res, \"RTT\") } },\n    }\n  }\n}\n\nMetrics[\"OpenFlow\"] = {\n  \"Default\": {\n    \"Name\": \"OpenFlow\",\n    \"Default\": \"RxBytes\",\n    \"MinVer\": \"0.23\",\n    \"Fields\": {\n      \"RxPackets\": { Name: \"Packets\", Suffix: \"Has('Type', 'ofrule').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxPackets\") } },\n      \"RxBytes\": { Name: \"Bytes\", Suffix: \"Has('Type', 'ofrule').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxBytes\") } },\n    }\n  }\n}\n\nMetrics[\"Interface\"] = {\n  \"Default\": {\n    \"Name\": \"Interface\",\n    \"Default\": \"Bytes\",\n    \"MinVer\": \"0.1\",\n    \"Fields\": {\n      \"Packets\": { Name: \"Packets\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxPackets\", \"TxPackets\") } },\n      \"Bytes\": { Name: \"Bytes\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxBytes\", \"TxBytes\") } },\n      \"Collisions\": { Name: \"Collisions\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"Collisions\") } },\n      \"Multicast\": { Name: \"Multicast\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"Multicast\") } },\n      \"RxBytes\": { Name: \"RxBytes\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxBytes\") } },\n      \"RxCompressed\": { Name: \"RxCompressed\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxCompressed\") } },\n      \"RxCrcErrors\": { Name: \"RxCrcErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxCrcErrors\") } },\n      \"RxDropped\": { Name: \"RxDropped\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxDropped\") } },\n      \"RxErrors\": { Name: \"RxErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxErrors\") } },\n      \"RxFifoErrors\": { Name: \"RxFifoErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxFifoErrors\") } },\n      \"RxFrameErrors\": { Name: \"RxFrameErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxFrameErrors\") } },\n      \"RxLengthErrors\": { Name: \"RxLengthErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxLengthErrors\") } },\n      \"RxMissedErrors\": { Name: \"RxMissedErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxMissedErrors\") } },\n      \"RxOverErrors\": { Name: \"RxOverErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxOverErrors\") } },\n      \"RxPackets\": { Name: \"RxPackets\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxPackets\") } },\n      \"TxAbortedErrors\": { Name: \"TxAbortedErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxAbortedErrors\") } },\n      \"TxBytes\": { Name: \"TxBytes\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxBytes\") } },\n      \"TxCarrierErrors\": { Name: \"TxCarrierErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxCarrierErrors\") } },\n      \"TxCompressed\": { Name: \"TxCompressed\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxCompressed\") } },\n      \"TxDropped\": { Name: \"TxDropped\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxDropped\") } },\n      \"TxHeartbeatErrors\": { Name: \"TxHeartbeatErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxHeartbeatErrors\") } },\n      \"TxPackets\": { Name: \"TxPackets\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxPackets\") } },\n      \"TxWindowErrors\": { Name: \"TxWindowErrors\", Suffix: \"HasKey('Metric').Metrics().Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxWindowErrors\") } },\n    }\n  },\n  \"OpenvSwitch\": {\n    \"Name\": \"OpenvSwitch\",\n    \"Default\": \"Bytes\",\n    \"MinVer\": \"0.23\",\n    \"Fields\": {\n      \"Packets\": { Name: \"Packets\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxPackets\", \"TxPackets\") } },\n      \"Bytes\": { Name: \"Bytes\", Suffix: \"Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxBytes\", \"res.TxBytes\") } },\n      \"Collisions\": { Name: \"Collisions\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"Collisions\") } },\n      \"RxBytes\": { Name: \"RxBytes\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxBytes\") } },\n      \"RxCrcErrors\": { Name: \"RxCrcErrors\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxCrcErrors\") } },\n      \"RxDropped\": { Name: \"RxDropped\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxDropped\") } },\n      \"RxErrors\": { Name: \"RxErrors\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxErrors\") } },\n      \"RxFrameErrors\": { Name: \"RxFrameErrors\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxFrameErrors\") } },\n      \"RxOverErrors\": { Name: \"RxOverErrors\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxOverErrors\") } },\n      \"RxPackets\": { Name: \"RxPackets\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"RxPackets\") } },\n      \"TxBytes\": { Name: \"TxBytes\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxBytes\") } },\n      \"TxDropped\": { Name: \"TxDropped\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxDropped\") } },\n      \"TxErrors\": { Name: \"TxErrors\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxErrors\") } },\n      \"TxPackets\": { Name: \"TxPackets\", Suffix: \"HasKey('Ovs.Metric').Metrics('Ovs').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"TxPackets\") } },\n    }\n  },\n  \"sFlow\": {\n    \"Name\": \"sFlow\",\n    \"Default\": \"IfInOctets\",\n    \"MinVer\": \"0.23\",\n    \"Fields\": {\n      \"IfInOctets\": { Name: \"IfInOctets\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInOctets\") } },\n      \"IfInUcastPkts\": { Name: \"IfInUcastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInUcastPkts\") } },\n      \"IfInMulticastPkts\": { Name: \"IfInMulticastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInMulticastPkts\") } },\n      \"IfInBroadcastPkts\": { Name: \"IfInBroadcastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInBroadcastPkts\") } },\n      \"IfInDiscards\": { Name: \"IfInDiscards\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInDiscards\") } },\n      \"IfInErrors\": { Name: \"IfInErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInErrors\") } },\n      \"IfInUnknownProtos\": { Name: \"IfInUnknownProtos\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfInUnknownProtos\") } },\n      \"IfOutOctets\": { Name: \"IfOutOctets\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfOutOctets\") } },\n      \"IfOutUcastPkts\": { Name: \"IfOutUcastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfOutUcastPkts\") } },\n      \"IfOutMulticastPkts\": { Name: \"IfOutMulticastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfOutMulticastPkts\") } },\n      \"IfOutBroadcastPkts\": { Name: \"IfOutBroadcastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfOutBroadcastPkts\") } },\n      \"IfOutDiscards\": { Name: \"IfOutDiscards\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfOutDiscards\") } },\n      \"IfOutErrors\": { Name: \"IfOutErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"IfOutErrors\") } },\n      \"OvsdpNHit\": { Name: \"OvsdpNHit\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsdpNHit\") } },\n      \"OvsdpNMissed\": { Name: \"OvsdpNMissed\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsdpNMissed\") } },\n      \"OvsdpNLost\": { Name: \"OvsdpNLost\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsdpNLost\") } },\n      \"OvsdpNMaskHit\": { Name: \"OvsdpNMaskHit\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsdpNMaskHit\") } },\n      \"OvsdpNFlows\": { Name: \"OvsdpNFlows\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsdpNFlows\") } },\n      \"OvsdpNMasks\": { Name: \"OvsdpNMasks\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsdpNMasks\") } },\n      \"OvsAppFdOpen\": { Name: \"OvsAppFdOpen\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsAppFdOpen\") } },\n      \"OvsAppFdMax\": { Name: \"OvsAppFdMax\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsAppFdMax\") } },\n      \"OvsAppConnOpen\": { Name: \"OvsAppConnOpen\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsAppConnOpen\") } },\n      \"OvsAppConnMax\": { Name: \"OvsAppConnMax\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsAppConnMax\") } },\n      \"OvsAppMemUsed\": { Name: \"OvsAppMemUsed\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsAppMemUsed\") } },\n      \"OvsAppMemMax\": { Name: \"OvsAppMemMax\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"OvsAppMemMax\") } },\n      \"VlanOctets\": { Name: \"VlanOctets\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"VlanOctets\") } },\n      \"VlanUcastPkts\": { Name: \"VlanUcastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"VlanUcastPkts\") } },\n      \"VlanMulticastPkts\": { Name: \"VlanMulticastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"VlanMulticastPkts\") } },\n      \"VlanBroadcastPkts\": { Name: \"VlanBroadcastPkts\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"VlanBroadcastPkts\") } },\n      \"VlanDiscards\": { Name: \"VlanDiscards\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"VlanDiscards\") } },\n      \"EthAlignmentErrors\": { Name: \"EthAlignmentErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthAlignmentErrors\") } },\n      \"EthFCSErrors\": { Name: \"EthFCSErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthFCSErrors\") } },\n      \"EthSingleCollisionFrames\": { Name: \"EthSingleCollisionFrames\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthSingleCollisionFrames\") } },\n      \"EthMultipleCollisionFrames\": { Name: \"EthMultipleCollisionFrames\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthMultipleCollisionFrames\") } },\n      \"EthSQETestErrors\": { Name: \"EthSQETestErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthSQETestErrors\") } },\n      \"EthDeferredTransmissions\": { Name: \"EthDeferredTransmissions\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthDeferredTransmissions\") } },\n      \"EthLateCollisions\": { Name: \"EthLateCollisions\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthLateCollisions\") } },\n      \"EthExcessiveCollisions\": { Name: \"EthExcessiveCollisions\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthExcessiveCollisions\") } },\n      \"EthInternalMacReceiveErrors\": { Name: \"EthInternalMacReceiveErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthInternalMacReceiveErrors\") } },\n      \"EthInternalMacTransmitErrors\": { Name: \"EthInternalMacTransmitErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthInternalMacTransmitErrors\") } },\n      \"EthCarrierSenseErrors\": { Name: \"EthCarrierSenseErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthCarrierSenseErrors\") } },\n      \"EthFrameTooLongs\": { Name: \"EthFrameTooLongs\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthFrameTooLongs\") } },\n      \"EthSymbolErrors\": { Name: \"EthSymbolErrors\", Suffix: \"HasKey('SFlow').Metrics('SFlow').Aggregates()\", PointsFnc: (res) => { return metricFnc(res, \"EthSymbolErrors\") } },\n    }\n  }\n}\n\nexport function TypeByKeys(keys) {\n  if (keys.indexOf(\"Filters\") >= 0 && keys.indexOf(\"Actions\") >= 0) {\n    return \"OpenFlow\";\n  } else if (keys.indexOf(\"TrackingID\") >= 0) {\n    return \"Flow\";\n  } else {\n      return \"Interface\";\n  }\n\n  return {}\n}"],"file":"metrics.js"}