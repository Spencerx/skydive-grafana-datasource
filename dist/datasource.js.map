{"version":3,"sources":["../src/datasource.js"],"names":["_","moment","SemverCmp","SkydiveDatasource","instanceSettings","$q","backendSrv","templateSrv","console","log","type","url","name","version","jsonData","q","options","targets","filter","target","hide","gremlin","length","when","data","queries","map","targetToQuery","range","from","format","to","promises","doQueries","all","then","results","flatten","title","field","metricField","dedup","aggregates","mode","refId","requestToQuery","targetToRequest","request","replace","gremlinTimeContext","query","doQuery","doGremlinQuery","result","status","forEach","metrics","uuid","datapoints","metric","value","has","ABBytes","BABytes","RxBytes","ABPackets","BAPackets","RxPackets","TxPackets","start","Start","last","Last","valueOf","push","toArray","reverse","catch","err","message","method","headers","datasourceRequest","response","msg","statusText"],"mappings":"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","sourcesContent":["import _ from \"lodash\";\nimport moment from \"moment\";\nimport { SemverCmp } from \"./semver\";\n\nexport class SkydiveDatasource {\n\n  /** @ngInject **/\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    console.log(instanceSettings);\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.version = instanceSettings.jsonData.version;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  // Called once per panel (graph)\n  query(options) {\n    var targets = _.filter(options.targets, target => {\n      return !target.hide && target.gremlin && target.gremlin !== 'Gremlin query';\n    });\n\n    if (targets.length <= 0) {\n      return this.q.when({ data: [] });\n    }\n\n    var queries = _.map(targets, target => {\n      return this.targetToQuery(target, options.range.from.format('X'), options.range.to.format('X'));\n    });\n\n    var promises = this.doQueries(queries);\n    return this.q.all(promises).then(function (results) {\n      return { data: _.flatten(results) };\n    });\n  }\n\n  targetToRequest(target, from, to) {\n    return {\n      title: target.title || \"\",\n      gremlin: target.gremlin || \"\",\n      field: target.metricField,\n      dedup: target.dedup,\n      aggregates: target.aggregates,\n      mode: target.mode,\n      from: from,\n      to: to,\n      refId: target.refId,\n      hide: target.hide\n    };\n  }\n\n  targetToQuery(target, from, to) {\n    return this.requestToQuery(this.targetToRequest(target, from, to));\n  }\n\n  gremlinTimeContext(gremlin, request) {\n    if (SemverCmp(this.version, \"0.9\") == 0) {\n      gremlin = gremlin.replace(/^G\\./i, 'G.At(' + request.to + ').');\n      gremlin = gremlin.replace(/\\.Flows\\([^)]*\\)/i, '.Flows(Since(' + (request.to - request.from) + '))');\n    } else {\n      gremlin = gremlin.replace(/^G\\./i, 'G.At(' + request.to + ',' + (request.to - request.from) + ').');\n    }\n\n    return gremlin;\n  }\n\n  requestToQuery(request) {\n    // removing Context/At and Metric from the original query if present\n    var gremlin = request.gremlin.replace(/^G\\.At\\([^)]*\\)/i, 'G');\n    gremlin = request.gremlin.replace(/^G\\.Context\\([^)]*\\)/i, 'G');\n    gremlin = gremlin.replace(/\\.Metrics\\([^)]*\\)/i, '');\n    gremlin = gremlin.replace(/\\.Aggregates\\([^)]*\\)/i, '');\n    gremlin = gremlin.replace(/\\.Dedup\\([^)]*\\)/i, '');\n\n    // add time context\n    gremlin = this.gremlinTimeContext(gremlin, request);\n\n    switch (request.mode) {\n      case \"Outer\":\n        gremlin += '.Has(\"ParentUUID\", \"\")';\n        break;\n      case \"Inner\":\n        gremlin += '.Has(\"ParentUUID\", Ne(\"\"))';\n        break;\n    }\n\n    if (request.dedup && request.dedup != '---') {\n      gremlin += '.Dedup(\"' + request.dedup + '\")';\n    }\n\n    gremlin += '.Metrics()';\n\n    if (request.aggregates) {\n      gremlin += '.Aggregates()';\n    }\n\n    return { gremlin: gremlin, request: request };\n  }\n\n  doQueries(queries) {\n    return _.map(queries, query => {\n      return this.doQuery(query);\n    });\n  }\n\n  doQuery(query) {\n    console.log(query.gremlin);\n\n    return this.doGremlinQuery(query.gremlin).then(result => {\n      var data = [];\n      if (result.status !== 200) {\n        return data;\n      }\n\n      if (result.data.length <= 0) {\n        return data;\n      }\n\n      _.forEach(result.data[0], (metrics, uuid) => {\n        var datapoints = _.map(metrics, metric => {\n          var value = 0;\n          switch (query.request.field) {\n            case \"Bytes\":\n              // flow or interface metrics ?\n              if (_.has(metric, \"ABBytes\")) {\n                value = metric.ABBytes + metric.BABytes;\n              } else {\n                value = metric.RxBytes + metric.RxBytes;\n              }\n              break;\n            case \"Packets\":\n              // flow or interface metrics ?\n              if (_.has(metric, \"ABPackets\")) {\n                value = metric.ABPackets + metric.BAPackets;\n              } else {\n                value = metric.RxPackets + metric.TxPackets;\n              }\n              break;\n            default:\n              value = metric[query.request.field];\n          }\n          var start = metric.Start;\n          var last = metric.Last;\n\n          if (SemverCmp(this.version, \"0.9\") > 0) {\n            start /= 1000;\n            last /= 1000;\n          }\n          return [value / (last - start), moment(last, 'X').valueOf()];\n        });\n\n        data.push({\n          target: query.request.title || uuid,\n          datapoints: _.toArray(datapoints).reverse()\n        });\n      });\n\n      return data;\n    }).catch(err => {\n      throw { message: err.data };\n    });\n  }\n\n  doGremlinQuery(gremlin) {\n    var options = {\n      url: this.url + '/api/topology',\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      data: { 'GremlinQuery': gremlin }\n    };\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  // Required\n  // Used for testing datasource in datasource configuration pange\n  testDatasource() {\n    var request = {\n      url: this.url + '/api',\n      method: 'GET'\n    };\n\n    if (SemverCmp(this.version, \"0.9\") > 0) {\n      request = {\n        url: this.url + '/api/topology',\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        data: { 'GremlinQuery': \"G.At('-1s').V().Limit(1)\" }\n      };\n    }\n\n    return this.backendSrv.datasourceRequest(request).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    }).catch(err => {\n      var msg = err.status + \" - \" + err.statusText;\n      if (err.data.length > 0) {\n        msg += \" : \" + err.data;\n      }\n\n      throw { message: msg };\n    });\n  }\n}\n"],"file":"datasource.js"}